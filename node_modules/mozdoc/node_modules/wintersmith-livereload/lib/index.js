// Generated by CoffeeScript 1.7.1
var LivereloadServer, path;

path = require('path');

LivereloadServer = require('livereload-server');

module.exports = function(env, callback) {
  var clientScript, defaults, key, options, server, _base;
  env.helpers.livereload = function() {
    return '';
  };
  if (env.mode !== 'preview') {
    return callback();
  }
  defaults = {
    port: 35729,
    clientScript: 'livereload.js',
    liveCSS: true
  };
  options = env.config.livereload || {};
  for (key in defaults) {
    if (options[key] == null) {
      options[key] = defaults[key];
    }
  }
  clientScript = new env.plugins.StaticFile({
    full: path.resolve(__dirname, './../livereload.js'),
    relative: options.clientScript
  });
  clientScript.__env = env;
  server = new LivereloadServer({
    id: 'com.yellowagents.wintersmith',
    name: 'Wintersmith',
    version: '0.1.0',
    port: options.port,
    protocols: {
      monitoring: 7,
      saving: 1
    }
  });
  server.on('connected', function(conneciton) {
    return env.logger.verbose("LiveReload: Client connected (" + conneciton.id + ")");
  });
  server.on('disconnected', function(conneciton) {
    return env.logger.verbose("LiveReload: Client disconnected (" + conneciton.id + ")");
  });
  server.on('command', function(conneciton, command) {
    return env.logger.verbose("LiveReload: " + (JSON.stringify(command)));
  });
  server.on('error', function(error) {
    return env.logger.error(error.message, error);
  });
  env.helpers.livereload = function() {
    return "<script src=\"" + clientScript.url + "?port=" + options.port + "\" type=\"text/javascript\"></script>";
  };
  if ((_base = env.locals).livereloadScript == null) {
    _base.livereloadScript = env.helpers.livereload();
  }
  env.registerGenerator('livereload', function(contents, callback) {
    return callback(null, {
      livereload: clientScript
    });
  });
  env.on('change', function(filename) {
    var connection, id, _ref, _results;
    _ref = server.connections;
    _results = [];
    for (id in _ref) {
      connection = _ref[id];
      _results.push(connection.send({
        command: 'reload',
        path: filename || '',
        liveCSS: options.liveCSS
      }));
    }
    return _results;
  });
  return server.listen(function(error) {
    server.wsserver.on('connection', function(socket) {
      return socket.on('error', function(error) {
        if (error.code !== 'ECONNRESET') {
          throw error;
        }
      });
    });
    if (error == null) {
      env.logger.info("LiveReload listening on port " + server.port);
    }
    return callback(error);
  });
};
